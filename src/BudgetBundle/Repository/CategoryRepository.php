<?php
/**
 * Copyright (c) Nicolas Grancher <https://github.com/nicolasgrancher> 2017.
 */

namespace BudgetBundle\Repository;

use BudgetBundle\Entity\Account;

/**
 * Class CategoryRepository
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 * @package BudgetBundle\Repository
 */
class CategoryRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param Account $account
     * @return array
     */
    public function findAmountByMonth(Account $account)
    {
        $results = $this->createQueryBuilder('c')
            ->select('c.name AS category, 
            SUBSTRING(o.date, 1, 4) AS year, 
            SUBSTRING(o.date, 6, 2) AS month, 
            SUM(o.amount) AS amount,
            c.color AS color')
            ->join('c.operations', 'o')
            ->groupBy('year, month, c')
            ->where('o.account = :account')
            ->andWhere('o.reconciliation IS NULL')
            ->setParameter('account', $account)
            ->getQuery()
            ->getArrayResult();

        $categories = [];

        foreach ($results as $result) {
            if (!isset($categories[$result['category']])) {
                $categories[$result['category']] = [
                    'metadata' => [
                        'name' => $result['category'],
                        'color' => $result['color'],
                    ],
                    'data' => [],
                ];
            }

            $categories[$result['category']]['data'][$result['year'] . '-' . $result['month']] = [
                'year' => $result['year'],
                'month' => $result['month'],
                'amount' => $result['amount'],
                'color' => $result['color'],
            ];
        }

        return $categories;
    }
}
